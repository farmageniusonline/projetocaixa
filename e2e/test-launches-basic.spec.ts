import { test, expect } from '@playwright/test';

test('Teste b√°sico - Aba Lan√ßamentos com integra√ß√£o Supabase', async ({ page }) => {
  // Setup
  await page.setViewportSize({ width: 1440, height: 900 });
  await page.goto('http://localhost:5175');

  // Login
  await page.fill('[data-testid="username-input"]', 'admin@manipularium.com.br');
  await page.fill('[data-testid="password-input"]', 'manipularium');
  await page.click('[data-testid="login-button"]');
  await page.waitForTimeout(3000);

  // Go to Lan√ßamentos tab
  await page.click('text=Lan√ßamentos');
  await page.waitForTimeout(2000);

  console.log('=== TESTE B√ÅSICO: Aba Lan√ßamentos ===');

  // 1. Verificar se chegou na aba correta
  const title = page.locator('h2:has-text("Lan√ßamentos Manuais")');
  await expect(title).toBeVisible();
  console.log('‚úÖ Aba Lan√ßamentos carregada');

  // 2. Verificar se os novos bot√µes de Supabase est√£o presentes
  const loadButton = page.locator('button:has-text("Carregar")');
  const syncButton = page.locator('button:has-text("Sync Local")');

  if (await loadButton.count() > 0) {
    console.log('‚úÖ Bot√£o "Carregar" encontrado');
  } else {
    console.log('‚ùå Bot√£o "Carregar" N√ÉO encontrado');
  }

  if (await syncButton.count() > 0) {
    console.log('‚úÖ Bot√£o "Sync Local" encontrado');
  } else {
    console.log('‚ùå Bot√£o "Sync Local" N√ÉO encontrado');
  }

  // 3. Verificar formul√°rio de lan√ßamento
  const methodButtons = page.locator('button[data-payment-method]');
  const valueInput = page.locator('input[placeholder*="valor"]');
  const addButton = page.locator('button:has-text("Adicionar")');

  if (await methodButtons.count() > 0) {
    console.log('‚úÖ Bot√µes de m√©todo de pagamento encontrados');
  } else {
    console.log('‚ùå Bot√µes de m√©todo de pagamento N√ÉO encontrados');
  }

  if (await valueInput.count() > 0) {
    console.log('‚úÖ Campo de valor encontrado');
  } else {
    console.log('‚ùå Campo de valor N√ÉO encontrado');
  }

  if (await addButton.count() > 0) {
    console.log('‚úÖ Bot√£o "Adicionar" encontrado');
  } else {
    console.log('‚ùå Bot√£o "Adicionar" N√ÉO encontrado');
  }

  // 4. Teste simples de adi√ß√£o de lan√ßamento
  try {
    // Selecionar Dinheiro
    await page.click('button[data-payment-method="cash"]');
    console.log('‚úÖ M√©todo "Dinheiro" selecionado');

    // Inserir valor
    await page.fill('input[placeholder*="valor"]', '100.00');
    console.log('‚úÖ Valor inserido: R$ 100,00');

    // Clicar Adicionar
    await page.click('button:has-text("Adicionar")');
    console.log('‚úÖ Bot√£o "Adicionar" clicado');

    // Aguardar processamento
    await page.waitForTimeout(3000);

    // Verificar se o campo foi limpo (indica sucesso)
    const valueAfter = await valueInput.inputValue();
    if (valueAfter === '') {
      console.log('‚úÖ Campo limpo - lan√ßamento provavelmente salvo com sucesso');
    } else {
      console.log('‚ö†Ô∏è Campo n√£o foi limpo - pode ter havido erro');
    }

  } catch (error) {
    console.log('‚ùå Erro durante teste de adi√ß√£o:', error);
  }

  // 5. Testar bot√£o de carregamento
  try {
    console.log('üîÑ Testando bot√£o Carregar...');
    await loadButton.click();
    await page.waitForTimeout(2000);
    console.log('‚úÖ Bot√£o Carregar executado sem erro');
  } catch (error) {
    console.log('‚ùå Erro ao testar bot√£o Carregar:', error);
  }

  // 6. Screenshot final
  await page.screenshot({
    path: 'test-lancamentos-supabase.png',
    fullPage: false
  });

  console.log('üì∏ Screenshot salvo: test-lancamentos-supabase.png');
  console.log('üéâ Teste b√°sico conclu√≠do!');
});